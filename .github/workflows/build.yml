name: Build `vibe` & `vibed`

on:
  push:
    branches: [release]
  pull_request:
    branches: [release]
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    name: Build `vibe` & `vibed`
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: macos-aarch64
            platform: macos-latest
            target: aarch64-apple-darwin # for Arm based macs (M1 and above).
            binary: vibed
            bundles: |
              vibe/src-tauri/target/aarch64-apple-darwin/release/bundle/dmg/*.dmg
              vibe/src-tauri/target/aarch64-apple-darwin/release/bundle/macos/*.app

          - name: macos-x86_64
            platform: macos-latest
            target: x86_64-apple-darwin # for Intel based macs.
            binary: vibed
            bundles: |
              vibe/src-tauri/target/x86_64-apple-darwin/release/bundle/dmg/*.dmg
              vibe/src-tauri/target/x86_64-apple-darwin/release/bundle/macos/*.app

          - name: linux
            platform: ubuntu-22.04
            target: x86_64-unknown-linux-gnu
            binary: vibed
            bundles: |
              vibe/src-tauri/target/x86_64-unknown-linux-gnu/release/bundle/deb/*.deb
              vibe/src-tauri/target/x86_64-unknown-linux-gnu/release/bundle/rpm/*.rpm
              vibe/src-tauri/target/x86_64-unknown-linux-gnu/release/bundle/appimage/*.AppImage

          - name: windows
            platform: windows-latest
            target: x86_64-pc-windows-msvc
            binary: vibed.exe
            bundles: |
              vibe/src-tauri/target/x86_64-pc-windows-msvc/release/bundle/msi/*.msi
              vibe/src-tauri/target/x86_64-pc-windows-msvc/release/bundle/nsis/*.exe

    runs-on: ${{ matrix.platform }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: Install Rust Stable
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Install Dependencies (Ubuntu only)
        if: matrix.platform == 'ubuntu-22.04'
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.0-dev libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf

      - name: Install Frontend Dependencies
        working-directory: vibe
        run: bun install

      - name: Build Frontend `vibe`
        working-directory: vibe
        run: bun run tauri build --target ${{ matrix.target }}

      - name: Build Backend `vibed`
        working-directory: vibed
        run: cargo build --release --target ${{ matrix.target }}

      - name: Upload Frontend Artifact `vibe`
        uses: actions/upload-artifact@v4
        with:
          name: vibe-${{ matrix.name }}
          path: ${{ matrix.bundles }}

      - name: Upload Backend Artifact `vibed`
        uses: actions/upload-artifact@v4
        with:
          name: vibed-${{ matrix.name }}
          path: vibed/target/${{ matrix.target }}/release/${{ matrix.binary }}
